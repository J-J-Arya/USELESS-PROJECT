WEBALYZER 🎯
Basic Details
Team Name: TEAM ZEN
Team Members
Team Lead: J J ARYA - CUSAT

Member 2: ATHUL V - CUSAT

Project Description
Webalyzer is a Flask-based web tool that simulates a spider’s behavior by analyzing spider webs through a playful and interactive UI.

The Problem (that doesn't exist)
How do spiders keep analyzing their webs if we don’t make an app for them?

The Solution (that nobody asked for)
A web app (so spiders don’t need to download anything!) that allows them to upload pictures of their webs.
The app:

Analyzes the image

Counts the number of closed loops

Estimates how many flies might get caught based on that

Pretty useful, isn’t it? 🕷

Technical Details
Technologies/Components Used
For Software:

Languages used: Python, HTML, CSS

Frameworks used: Flask

Libraries used: OpenCV

Tools used: Any code editor (VS Code recommended), Python environment

For Hardware:

None (Purely software/web app)

Implementation
For Software:

pip install -r requirements.txt

Run:
python app.py


Project Documentation:
Tagline : Because even spiders deserve good software...

📸 Screenshots: Screenshots are stored in the 'Screenshots' folder (in case they don’t appear here) and are also uploaded below

![Screenshot of Splash Screen](Screenshots/Screenshot%202025-08-09%20060118.png)  
<!-- Splash screen welcoming users to Webalyzer. -->

![Screenshot of Fake CAPTCHA](Screenshots/Screenshot%202025-08-09%20055848.png)  
<!-- Playful CAPTCHA screen verifying if user is a spider. -->

![Screenshot of Upload Window](Screenshots/Screenshot%202025-08-09%20052832.png)  
<!-- Upload interface to submit spider web images. -->

![Screenshot of Result](Screenshots/Screenshot%202025-08-09%20052922.png)  
<!-- Results showing number of closed loops and fly catch estimate. -->



🧪 *NOTE*

📸 Sample pictures for usage are stored in `imagess/` (in case the link doesn't appear here)

![Sample picture 1](imagess/Screenshot%202025-08-09%20052330.png)  
<!-- Sample spider web image 1 -->

![Sample picture 2](imagess/Screenshot%202025-08-09%20055719.png)  
<!-- Sample spider web image 2 -->


Diagrams

This diagram shows the flow: Splash screen → CAPTCHA verification → Image upload → Image analysis using OpenCV → Result display.

Project Demo
Video
[Add your demo video link here]
This video demonstrates the complete user journey through the Webalyzer app, from start to finish.

Additional Demos
[Add any additional demo materials or links here]

Team Contributions
J J ARYA: Coding and Backend development (Flask, OpenCV)

ATHUL V: Designing and UI (HTML/CSS, front-end design)

Made with ❤️ at TinkerHub Useless Projects


